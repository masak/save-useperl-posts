<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
            "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="shortcut icon" href="//use.perl.org/favicon.ico">

<title>'Et tu, bruteforce?'</title>

<link rel="stylesheet" type="text/css" media="screen, projection" href="//images.use.perl.org/base.css?T_2_5_0_235">
<link rel="stylesheet" type="text/css" media="screen, projection" href="//images.use.perl.org/comments.css?T_2_5_0_235">
<link rel="stylesheet" type="text/css" media="screen, projection" href="//images.use.perl.org/useperl.css?T_2_5_0_235">
<link rel="stylesheet" type="text/css" media="print" href="//images.use.perl.org/print.css?T_2_5_0_235">
<link rel="stylesheet" type="text/css" media="handheld" href="//images.use.perl.org/handheld.css?T_2_5_0_235">

<script src="//images.use.perl.org/jquery/jquery-1.2.6.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/jquery/jquery.metadata.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/slash.util.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/jquery/jquery.slashdot.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/yui/yahoo.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/yui/dom.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/yui/event.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/yui/dragdrop.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/yui/animation.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/yui/calendar.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/sd_calendar.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/slash.article-info.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/tag-ui.js?T_2_5_0_235" type="text/javascript"></script>
<script src="//images.use.perl.org/common.js?T_2_5_0_235" type="text/javascript"></script>

<!-- start template: ID 121, header;misc;default -->

<link rel="top"       title="All the Perl that's Practical to Extract and Report" href="//use.perl.org/" >
<link rel="search"    title="Search use Perl" href="//use.perl.org/search.pl">
<link rel="alternate" title="use Perl RSS" href="//use.perl.org/index.rss" type="application/rss+xml">
</head>
<body class="useperlorg">
<div id="top_parent"></div>

<div id="jump">
	<a href="#main-articles">Stories</a>
	<br>
	<a href="#blocks">Slash Boxes</a>
	<br>
	<a href="#comments">Comments</a>
</div>
<div class="ad1">

</div>
<div id="frame">

<!-- UsePerl Ad Start -->
<div class="ad1"><!-- ad position 1 -->
<div id="fad1" style="text-align:center">
<!-- DoubleClick Ad Tag 1 -->
<script type="text/javascript">
	dfp_ord=Math.random()*10000000000000000;
	dfp_tile = 1;

	document.write('<script type="text/javascript" src="http://ad.doubleclick.net/adj/ostg.useperl/mainpage_p1_leader;pg=index;logged_in=0;tile='+dfp_tile+';ord='+dfp_ord+'?"><\/script>');
	dfp_tile++;
</script>
</div>
<!-- End DoubleClick Ad Tag 1 --></div>
<!-- UsePerl Ad End -->

	<div id="topnav">
		<div id="logo">
			<h1>
				<a href="//use.perl.org">use Perl</a>
			</h1>
		</div>
                <div class="search">
			<form method="get" action="//use.perl.org/search.pl">
				<fieldset>
					<legend></legend>
					<label>Search <strong>use Perl</strong></label>
					<input type="text" name="query" value="" size="20">
					<input type="submit" value="Go" class="button">
				</fieldset>
			</form>
		</div>
	</div>
	<div id="slogan">
		<h2>
			All the Perl that's Practical to Extract and Report
		</h2>
	</div>
	<div id="commentsnav">
		<div id="links">
			

<!-- start template: ID 474, sidebox;misc;default -->

<div class="block">
	<div class="title" id="navigation-title">
		<h4>
			Navigation
		</h4>
	</div>
	<div class="content" id="navigation-content">
		<ul>
	<li class="begin">
		<a href="//use.perl.org/faq.shtml">FAQ</a>
	</li>
	<li>
		<a href="//use.perl.org/about.shtml">About</a>
        </li>
        <li>
		<a href="//use.perl.org/submit.pl">Submit Story</a>
        </li>
        <li>
		<a href="//use.perl.org/search.pl">Older Stories</a>
        </li>
        <li>	
		<a href="//use.perl.org/topics.shtml">Topics</a>
        </li>
        <li>
		<a href="//use.perl.org/pollBooth.pl">Polls</a>
        </li>
        <li>
		<a href="//use.perl.org/journal.pl">Journals</a>
        </li>
        <li>
		<a href="//use.perl.org/authors.pl">Authors</a>
        </li>
        <li>
		<a href="//use.perl.org/modulelist/">New Modules</a>
        </li>
        <li>
		<a href="//use.perl.org/users.pl?op=edithome">Preferences</a>

        </li>
</ul>
	</div>
</div>

<!-- end template: ID 474, sidebox;misc;default -->


		</div>
	</div>
	<div id="contents">
		
		<div id="comments">

<!-- end template: ID 121, header;misc;default -->



<!-- start template: ID 159, printCommentsMain;misc;default -->

<a name="acomments"></a>
<div class="commentwrap" id="commentwrap">

<div class="commentBox" style="font-size: 120%">
	<div>
<span class="escape-link"><a href="//use.perl.org/~masak/journal/38924" title="Back to Article - 'Et tu, bruteforce?'">'Et tu, bruteforce?'</a></span>
<span class="commentBoxLinks"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_d"></span> More</a> |

	<a href="//use.perl.org/login.pl" onclick="show_login_box(); return false">Login</a>



	| <a href="//use.perl.org/comments.pl?sid=42918&amp;op=reply&amp;threshold=0&amp;commentsort=0&amp;mode=thread" onclick="D2.replyTo(0); return false;">Reply</a></span>
	</div>
</div>

	<div class="commentBoxForm" id="commentControlBox">
<div></div>
	<div class="commentBox">
		<small>
		<b>The Fine Print:</b> The following comments are owned by whoever posted them.  We are not responsible for them in any way.
		</small>
<noscript><br><small>Without JavaScript enabled, you might want to
use <a href="//use.perl.org/comments.pl?sid=42918&amp;threshold=0&amp;commentsort=0&amp;mode=thread&amp;no_d2=1">the classic discussion system</a> instead.  If you <a href="//use.perl.org/login.pl">login</a>, you can remember this preference.
</small></noscript>
	</div>
	</div>
	
		<div id="d2out" class="horizontal">
		<div id="d2act" class="hide">
		<div class="loki" id="gods">
		<div class="block">
			<div class="title">

				<h4>
				
					<span class="h-inline">
					<a href="//use.perl.org/~masak/journal/38924" title="Back to Article - 'Et tu, bruteforce?'">'Et tu, bruteforce?'</a></span>
					<span class="titlecount"><a href="//use.perl.org/~masak/journal/38924#topcomment" title="Back to Top Comment - 'Et tu, bruteforce?'"><span id="titlecountnum">7</span>&nbsp;Comments</a></span>
				
		<span class="ccw-header-links"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_b"></span> More</a> |

	<a href="//use.perl.org/login.pl" onclick="show_login_box(); return false">Login</a>



	| <a href="//use.perl.org/comments.pl?sid=42918&amp;op=reply&amp;threshold=0&amp;commentsort=0&amp;mode=thread" onclick="D2.replyTo(0); return false;">Reply</a></span>
		<span id="d2toggle" title="Toggle window location" onclick="D2.toggleDisplayOptions()" class="close">/</span>
				</h4>
			</div>
		</div>
<script type="text/javascript">
gCommentControlWidget = null;

YAHOO.slashdot.ThresholdApp = function() {
  return {
    init: function() {
      gCommentControlWidget = new YAHOO.slashdot.ThresholdWidget('X');
      gCommentControlWidget.setTHT(D2.user_threshold(), D2.user_highlightthresh());
      D2.updateTotals();
    }
  };
}();

YAHOO.util.Event.addListener(window, "load", YAHOO.slashdot.ThresholdApp.init);
</script>
		<div id="bones">
      <div id="ccw">
        <div id="ccw-body" class="ccw-core">
          <div id="ccw-panel-container" class="ccw-core">
            <div id="ccw-full-panel" class="ccw-panel">
              <div class="ccw-panel-border"></div>
              <div id="ccw-full-count-pos" class="ccw-core-pos ccw-count-pos">
                <span id="ccw-full-count-text" class="ccw-count-text"><span id="currentFull"></span><span id="ccw-full-phrase">&nbsp;Full</span></span>
              </div>
            </div>
            <div id="ccw-abbr-panel" class="ccw-panel">
              <div class="ccw-panel-border"></div>
              <div id="ccw-abbr-count-pos" class="ccw-core-pos ccw-count-pos">
                <span id="ccw-abbr-count-text" class="ccw-count-text"><span id="currentOneline"></span><span id="ccw-abbr-phrase">&nbsp;Abbreviated</span></span>
              </div>
            </div>
            <div id="ccw-hide-panel" class="ccw-panel">
              <div id="ccw-hide-count-pos" class="ccw-core-pos ccw-count-pos">
                <span id="ccw-hide-count-text" class="ccw-count-text"><span id="currentHidden"></span><span id="ccw-hide-phrase">&nbsp;Hidden</span></span>
              </div>
            </div>
          </div>
    
          <div id="ccw-control" class="ccw-core">
            <div id="ccw-centering-rail" class="ccw-core">
              <div id="ccw-hide-bar-pos" class="ccw-core-pos">
                <div id="ccw-hide-bar" class="ccw-bar">
                  <div id="ccw-hide-bar-tab" class="ccw-bar-tab"></div>
                  <div id="ccw-hide-bar-upzone" class="ccw-upzone" onclick="gCommentControlWidget.stepTHT(HIDE_BAR, +1)"></div>
                  <div id="ccw-hide-bar-downzone" class="ccw-downzone" onclick="gCommentControlWidget.stepTHT(HIDE_BAR, -1)"></div>
                </div>
              </div>
              <div id="ccw-abbr-bar-pos" class="ccw-core-pos">
                <div id="ccw-abbr-bar" class="ccw-bar">
                  <div id="ccw-abbr-bar-tab" class="ccw-bar-tab"></div>
                  <div id="ccw-abbr-bar-upzone" class="ccw-upzone" onclick="gCommentControlWidget.stepTHT(ABBR_BAR, +1)"></div>
                  <div id="ccw-abbr-bar-downzone" class="ccw-downzone" onclick="gCommentControlWidget.stepTHT(ABBR_BAR, -1)"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
		</div>
		<div class="commentControlFooter"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_c"></span> More</a> |

	<a href="//use.perl.org/login.pl" onclick="show_login_box(); return false">Login</a>



	| <a href="//use.perl.org/comments.pl?sid=42918&amp;op=reply&amp;threshold=0&amp;commentsort=0&amp;mode=thread" onclick="D2.replyTo(0); return false;">Reply</a><div id="login_cover" style="display:none" onclick="hide_login_box()"></div>
<div id="login_box" style="display:none">
<div class="generaltitle" >
	<div class="title">
		<h3 >
			Please Log In to Continue<a href="#" onclick="hide_login_box(); return false" class="close" title="Close this box"><img id="login_box_close" src="//images.use.perl.org/sic_close.png" alt="Close"></a>
			
		</h3>
	</div>
</div>
<div id="login_box_content">
<form action="//use.perl.org/login.pl" method="post">
<fieldset>
	<legend>Log In</legend>
	<label>
		Nickname
	</label>
	<input type="text" name="unickname" size="20" value="">
	<label>
		Password
	</label>
	<input type="hidden" name="returnto" value="//use.perl.org/comments.pl?sid=42918">
	<input type="hidden" name="op" value="userlogin">
	<input type="password" name="upasswd" size="20">
	<label class="checkbox">
		<input type="checkbox" name="login_temp" value="yes">
		Public Terminal
	</label>
	<input type="submit" name="userlogin" value="Log in" class="button">
	</fieldset>
</form>
<p>
	[ <b>
		<a href="//use.perl.org/login.pl?op=newuserform">
			Create a new account
		</a>
	</b> ]
</p>
</div></div>
<script type="text/javascript">logged_in = 0</script></div>
		<div id="commentControlBoxStatus" class="hide"><b>Loading... please wait.</b></div>
	</div>
</div>
		</div>
	
</div>
<a name="topcomment"></a>

<!-- end template: ID 159, printCommentsMain;misc;default -->



<!-- start template: ID 157, printCommComments;misc;default -->

<script src="//images.use.perl.org/comments.js?T_2_5_0_235" type="text/javascript"></script>
	<script type="text/javascript">
<!--
	D2.d2_keybindings_disable()[191] = 1;
	window.onscroll = D2.d2act;
	D2.boxStatus(1);
D2.comments({ 68458: { uid: 1492, pid: 0, read: 0, points: 1, kids: [  ], opid: 0 }, 68494: { uid: 276, pid: 68464, subject: "Re:left-to-right recursive generation is very fast", read: 0, points: 2, kids: [  ], opid: 68464 }, 68463: { uid: 276, pid: 68462, subject: "Re:left-to-right recursive generation is very fast", read: 0, points: 2, kids: [ 68464 ], opid: 68462 }, 68462: { uid: 6289, pid: 68461, subject: "Re:left-to-right recursive generation is very fast", read: 0, points: 1, kids: [ 68463 ], opid: 68461 }, 68464: { uid: 6289, pid: 68463, subject: "Re:left-to-right recursive generation is very fast", read: 0, points: 1, kids: [ 68465, 68494 ], opid: 68463 }, 68461: { uid: 276, pid: 0, read: 0, points: 2, kids: [ 68462 ], opid: 0 }, 68465: { uid: 276, pid: 68464, subject: "Re:left-to-right recursive generation is very fast", read: 0, points: 2, kids: [  ], opid: 68464 } });

D2.thresh_totals({6:{6:{1:7,3:0,2:0}},4:{6:{1:7,3:0,2:0},4:{1:7,3:0,2:0},5:{1:7,3:0,2:0}},1:{6:{1:0,3:0,2:7},4:{1:0,3:0,2:7},1:{1:0,3:7,2:0},3:{1:0,3:1,2:6},2:{1:0,3:5,2:2},5:{1:0,3:0,2:7}},3:{6:{1:7,3:0,2:0},4:{1:7,3:0,2:0},3:{1:7,3:0,2:0},5:{1:7,3:0,2:0}},0:{6:{1:0,3:0,2:7},4:{1:0,3:0,2:7},1:{1:0,3:7,2:0},3:{1:0,3:1,2:6},0:{1:0,3:7,2:0},2:{1:0,3:5,2:2},5:{1:0,3:0,2:7}},2:{6:{1:3,3:0,2:4},4:{1:3,3:0,2:4},3:{1:3,3:1,2:3},2:{1:3,3:4,2:0},5:{1:3,3:0,2:4}},5:{6:{1:7,3:0,2:0},5:{1:7,3:0,2:0}},"-1":{6:{1:0,3:0,2:7},4:{1:0,3:0,2:7},1:{1:0,3:7,2:0},3:{1:0,3:1,2:6},0:{1:0,3:7,2:0},2:{1:0,3:5,2:2},5:{1:0,3:0,2:7},"-1":{1:0,3:7,2:0}}});

D2.root_comment(0);
D2.root_comments([68458,68461]);
D2.root_comments_hash({68458:1,68461:1});

D2.d2_comment_order(0);
D2.user_uid(7);
D2.user_is_anon(1);
D2.user_is_admin(0);
D2.user_is_subscriber(0);
D2.user_threshold(0);
D2.user_highlightthresh(4);
D2.user_d2asp(0);

D2.discussion_id(42918);

D2.d2_seen('68458,3,1,1,1,1,29');
D2.more_comments_num(0);


//-->
	</script>




	
	
	
	
		<ul id="commentlisting" class="d2">
			<li id="tree_68458" class="comment">
<div id="comment_status_68458" class="commentstatus"></div>
<div id="comment_68458" class="oneline">

	<div id="comment_top_68458" class="commentTop newcomment">
		<div class="title">
			
			<h4><a id="comment_link_68458" name="comment_link_68458" href="//use.perl.org/comments.pl?sid=42918&amp;cid=68458" onclick="return D2.setFocusComment(68458)">if Knuth intended to have that effect</a>
			
			<span id="comment_score_68458" class="score">(<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 68458); return false">Score:1</a>)</span></h4>
		</div>
		<div class="details">
			by
			<a href="//use.perl.org/~n1vux/">n1vux (1492)</a>
			
			
			<span class="otherdetails" id="comment_otherdetails_68458"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_68458">given his track record <a href="http://en.wikipedia.org/wiki/Concrete_Mathematics" title="wikipedia.org" rel="nofollow">http://en.wikipedia.org/wiki/Concrete_Mathematics</a> [wikipedia.org], I suspect Knuth intended either that (brute force coding) or a search for an elegant yet constructive proof.</div>
		
		<div id="comment_sig_68458" class="sig">--<br>Bill
<br># I had a sig when sigs were cool
<br>use Sig;</div>
		
	
	</div>
	<div class="commentSub" id="comment_sub_68458"></div>

</div>


<div id="replyto_68458"></div>

<ul id="group_68458">
	<li id="hiddens_68458" class="hide"></li>
</ul></li><li id="tree_68461" class="comment">
<div id="comment_status_68461" class="commentstatus"></div>
<div id="comment_68461" class="oneline">

	<div id="comment_top_68461" class="commentTop newcomment">
		<div class="title">
			
			<h4><a id="comment_link_68461" name="comment_link_68461" href="//use.perl.org/comments.pl?sid=42918&amp;cid=68461" onclick="return D2.setFocusComment(68461)">left-to-right recursive generation is very fast</a>
			
			<span id="comment_score_68461" class="score">(<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 68461); return false">Score:2</a>)</span></h4>
		</div>
		<div class="details">
			by
			<a href="//use.perl.org/~jmm/">jmm (276)</a>
			
			
			<span class="otherdetails" id="comment_otherdetails_68461"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_68461"><p>Use a function that takes a position and a set of as-yet-unplaced numbers.  The position is the first slot that might be free.  The function finds the first slot that really is free, and then for each unplaced number tries to place it (also trying to place its pair k+1 positions later).  If there are additional unplaced numbers recurse, else you have a solution.  (To eliminate the reversed pairs, only print the result if the first number is lower than the last.)  You have to remove the the numbers that were<span class="substr"> </span></p></div>
		
	
	</div>
	<div class="commentSub" id="comment_sub_68461"></div>

</div>


<div id="replyto_68461"></div>

<ul id="group_68461">
	<li id="hiddens_68461" class="hide"></li>
</ul><ul id="commtree_68461"><li id="tree_68462" class="comment">
<div id="comment_status_68462" class="commentstatus"></div>
<div id="comment_68462" class="oneline">

	<div id="comment_top_68462" class="commentTop newcomment">
		<div class="title">
			
			<h4><a id="comment_link_68462" name="comment_link_68462" href="//use.perl.org/comments.pl?sid=42918&amp;cid=68462" onclick="return D2.setFocusComment(68462)">Re:</a>
			
			<span id="comment_score_68462" class="score">(<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 68462); return false">Score:1</a>)</span></h4>
		</div>
		<div class="details">
			by
			<a href="//use.perl.org/~masak/">masak (6289)</a>
			
			
			<span class="otherdetails" id="comment_otherdetails_68462"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_68462"><p><div class="quote"><p>Use a function that takes a position and a set of as-yet-unplaced numbers.  The position is the first slot that might be free.  The function finds the first slot that really is free, and then for each unplaced number tries to place it (also trying to place its pair k+1 positions later).  If there are additional unplaced numbers recurse, else you have a solution.</p></div><p>You've just described my second, non-bruteforce solution given in the post. Did you read it?</p><p><div class="quote"><p>(To eliminate the reversed pairs, only print the result if the first number is lower than the last.)</p></div><p>Nice idea. Didn't think of that.</p><p><div class="quote"><p>I implemented that on the train last night (but then didn't bring it with me today). It found the unique solutions for 3 and 4, found that there were no solutions for 5 and 6, and found a dozen or two (I didn't count them) solutions for 7 - all of these cases came back with no noticeable delay.</p></div><p>Then I conclude that your algorithm was not in Perl 6.<nobr> <wbr></nobr>:)</p></div>
		
	
	</div>
	<div class="commentSub" id="comment_sub_68462"></div>

</div>


<div id="replyto_68462"></div>

<ul id="group_68462">
	<li id="hiddens_68462" class="hide"></li>
</ul><ul id="commtree_68462"><li id="tree_68463" class="comment">
<div id="comment_status_68463" class="commentstatus"></div>
<div id="comment_68463" class="oneline">

	<div id="comment_top_68463" class="commentTop newcomment">
		<div class="title">
			
			<h4><a id="comment_link_68463" name="comment_link_68463" href="//use.perl.org/comments.pl?sid=42918&amp;cid=68463" onclick="return D2.setFocusComment(68463)">Re:</a>
			
			<span id="comment_score_68463" class="score">(<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 68463); return false">Score:2</a>)</span></h4>
		</div>
		<div class="details">
			by
			<a href="//use.perl.org/~jmm/">jmm (276)</a>
			
			
			<span class="otherdetails" id="comment_otherdetails_68463"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_68463"><p><div class="quote"><p><div class="quote"><p> [...]</p></div><p>You've just described my second, non-bruteforce solution given in the post. Did you read it?</p></div><p>Well, I looked at it, but didn't figure out what it was doing.</p><p><div class="quote"><p><div class="quote"><p> [...] - all of these cases came back with no noticeable delay.</p></div><p>Then I conclude that your algorithm was not in Perl 6.<nobr> <wbr></nobr>:)</p></div><p>Nope Perl 5 (and that's probably why I didn't figure out what your solution was doing<nobr> <wbr></nobr>:-)</p></div>
		
	
	</div>
	<div class="commentSub" id="comment_sub_68463"></div>

</div>


<div id="replyto_68463"></div>

<ul id="group_68463">
	<li id="hiddens_68463" class="hide"></li>
</ul><ul id="commtree_68463"><li id="tree_68464" class="comment">
<div id="comment_status_68464" class="commentstatus"></div>
<div id="comment_68464" class="oneline">

	<div id="comment_top_68464" class="commentTop newcomment">
		<div class="title">
			
			<h4><a id="comment_link_68464" name="comment_link_68464" href="//use.perl.org/comments.pl?sid=42918&amp;cid=68464" onclick="return D2.setFocusComment(68464)">Re:</a>
			
			<span id="comment_score_68464" class="score">(<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 68464); return false">Score:1</a>)</span></h4>
		</div>
		<div class="details">
			by
			<a href="//use.perl.org/~masak/">masak (6289)</a>
			
			
			<span class="otherdetails" id="comment_otherdetails_68464"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_68464"><p><div class="quote"><p><div class="quote"><p><div class="quote"><p> [...]</p></div><p>You've just described my second, non-bruteforce solution given in the post. Did you read it?</p></div><p>Well, I looked at it, but didn't figure out what it was doing.</p><p><div class="quote"><p><div class="quote"><p> [...] - all of these cases came back with no noticeable delay.</p></div><p>Then I conclude that your algorithm was not in Perl 6.<nobr> <wbr></nobr>:)</p></div><p>Nope Perl 5 (and that's probably why I didn't figure out what your solution was doing<nobr> <wbr></nobr>:-)</p></div><p>If you find the tuits, it would be interesting to hear what you conclude from a comparison of our two approaches.</p><p>Of course, if some particular piece of strange syntax blocks such an endeavor, I'd be very happy to explain the syntax rather than have you trawl the synopses for enlightenment.</p></div>
		
	
	</div>
	<div class="commentSub" id="comment_sub_68464"></div>

</div>


<div id="replyto_68464"></div>

<ul id="group_68464">
	<li id="hiddens_68464" class="hide"></li>
</ul><ul id="commtree_68464"><li id="tree_68465" class="comment">
<div id="comment_status_68465" class="commentstatus"></div>
<div id="comment_68465" class="oneline">

	<div id="comment_top_68465" class="commentTop newcomment">
		<div class="title">
			
			<h4><a id="comment_link_68465" name="comment_link_68465" href="//use.perl.org/comments.pl?sid=42918&amp;cid=68465" onclick="return D2.setFocusComment(68465)">Re:</a>
			
			<span id="comment_score_68465" class="score">(<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 68465); return false">Score:2</a>)</span></h4>
		</div>
		<div class="details">
			by
			<a href="//use.perl.org/~jmm/">jmm (276)</a>
			
			
			<span class="otherdetails" id="comment_otherdetails_68465"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_68465"><p><div class="quote"><p><div class="quote"><p><div class="quote"><p><div class="quote"><p> [...]</p></div><p>You've just described my second, non-bruteforce solution given in the post. Did you read it?</p></div><p>Well, I looked at it, but didn't figure out what it was doing.</p><p><div class="quote"><p><div class="quote"><p> [...] - all of these cases came back with no noticeable delay.</p></div><p>Then I conclude that your algorithm was not in Perl 6.<nobr> <wbr></nobr>:)</p></div><p>Nope Perl 5 (and that's probably why I didn't figure out what your solution was doing<nobr> <wbr></nobr>:-)</p></div><p>If you find the tuits, it would be interesting to hear what you conclude from a comparison of our two approaches.</p><p>Of course, if some particular piece of strange syntax blocks such an endeavor, I'd be very happy to explain the syntax rather than have you trawl the synopses for enlightenment.</p></div><p>The tuits will take a couple of days.  I'll post my perl5 code then too for comparison.</p></div>
		
	
	</div>
	<div class="commentSub" id="comment_sub_68465"></div>

</div>


<div id="replyto_68465"></div>

<ul id="group_68465">
	<li id="hiddens_68465" class="hide"></li>
</ul></li><li id="tree_68494" class="comment">
<div id="comment_status_68494" class="commentstatus"></div>
<div id="comment_68494" class="oneline">

	<div id="comment_top_68494" class="commentTop newcomment">
		<div class="title">
			
			<h4><a id="comment_link_68494" name="comment_link_68494" href="//use.perl.org/comments.pl?sid=42918&amp;cid=68494" onclick="return D2.setFocusComment(68494)">Re:</a>
			
			<span id="comment_score_68494" class="score">(<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 68494); return false">Score:2</a>)</span></h4>
		</div>
		<div class="details">
			by
			<a href="//use.perl.org/~jmm/">jmm (276)</a>
			
			
			<span class="otherdetails" id="comment_otherdetails_68494"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_68494"><tt>Your solution does a lot of array copy/filter'ing that mine avoids.&nbsp; That's not a fault with Perl6, though.<nobr> <wbr></nobr>:-)<br><span class="substr"> </span> <br>Also, I think yours is still algorithmically slower than mine.&nbsp; You try every number in every place.&nbsp; I try every number in the first place, then trying the remaining numbers in the remaining places (not all places).<br> <br>So, the comparison here is not between Perl5 and Perl6, but coding with always using array ops, and sometimes using individual elements.<br> <br>I have to go to 9 and 10 to get a</tt></div>
		
	
	</div>
	<div class="commentSub" id="comment_sub_68494"></div>

</div>


<div id="replyto_68494"></div>

<ul id="group_68494">
	<li id="hiddens_68494" class="hide"></li>
</ul></li></ul></li></ul></li></ul></li></ul></li>
			<li id="roothiddens" class="hide"></li>
		</ul>
	
	
	
	


<div id="replyto_0"></div>


<div id="discussion_buttons">


<span class="nbutton"><p><b><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_a" class="hide">Get More Comments</span></a></b></p></span>



<span class="nbutton"><p><b><a href="//use.perl.org/comments.pl?sid=42918&amp;op=reply&amp;threshold=0&amp;commentsort=0&amp;mode=thread" onclick="D2.replyTo(0); return false;">Reply</a></b></p></span>







</div>



	<script type="text/javascript">
<!--
		D2.currents()['hidden']   = 0;
		D2.currents()['full']     = 0;
		D2.currents()['oneline']  = 7;
		// D2.currents_total(7);

		D2.abbrev_comments({68494:142,68461:515});
		D2.noshow_comments([]);
		D2.pieces_comments([68458,68461,68462,68463,68464,68465,68494]);
		D2.init_hiddens([]);

		D2.finishLoading();


		if (D2.thresh_totals()[6][6][1] == 0) {
			D2.replyTo(0, 1);
		}


//-->
	</script>

<!-- end template: ID 157, printCommComments;misc;default -->



<!-- start template: ID 112, footer;misc;default -->

</div>
                </div>
                <div id="footer">
			<div class="download">
                                <!-- START DOWNLOAD PERL -->
                                <!-- Perl Mongers, Inc.  web@perlmongers.org -->
                                <a href="http://www.cpan.org/ports/index.html"><img src="http://www.perl.org/Images/download_perl.gif" width="102" height="42" alt="Download Perl Now!"></a>
                                <!-- END DOWNLOAD PERL -->
                        </div>	
			<div class="sitelogo">
				<a href="//use.perl.org/">
					<img src="http://images.use.perl.org/topics/useperl.gif" alt="useperl">
				</a>
			</div>
                        <em>
				&nbsp; &nbsp; &gt; This made me wonder, suddenly: can telnet be written in perl?<BR>
&nbsp; &nbsp; Of course it can be written in Perl.&nbsp; Now if you'd said nroff,<BR>
&nbsp; &nbsp; that would be more challenging...&nbsp;  --Larry Wall
			</em>
		</div>
		<div class="copyright">
			Stories, comments, journals, and other submissions on use Perl; are Copyright 1998-2006, their respective owners.
		</div>
		<div class="btmnav">
			<ul>
	<li class="begin">
		<a href="//use.perl.org/faq.shtml">FAQ</a>
	</li>
	<li>
		<a href="//use.perl.org/about.shtml">About</a>
        </li>
        <li>
		<a href="//use.perl.org/submit.pl">Submit Story</a>
        </li>
        <li>
		<a href="//use.perl.org/search.pl">Older Stories</a>
        </li>
        <li>	
		<a href="//use.perl.org/topics.shtml">Topics</a>
        </li>
        <li>
		<a href="//use.perl.org/pollBooth.pl">Polls</a>
        </li>
        <li>
		<a href="//use.perl.org/journal.pl">Journals</a>
        </li>
        <li>
		<a href="//use.perl.org/authors.pl">Authors</a>
        </li>
        <li>
		<a href="//use.perl.org/modulelist/">New Modules</a>
        </li>
        <li>
		<a href="//use.perl.org/users.pl?op=edithome">Preferences</a>

        </li>
</ul>
		</div>
        </div>
<div id="modal_cover" style="display:none" onclick="hide_modal_box()"></div>
<div id="modal_box" style="display:none">
        <div class="generaltitle" >
                <div class="title"><h3><span id="preference_title"></span> <a href="#" onclick="hide_modal_box(); return false"><img src="//images.use.perl.org/sic_close.png" alt="Close"></a></h3></div>
        </div>
        <div id="modal_box_content"></div>
</div>

	<script src="http://www.google-analytics.com/urchin.js" type="text/javascript"></script>
	<script type="text/javascript">
		_uacct = "UA-32013-15";
		urchinTracker();
	</script>

</body>
</html>

<!-- end template: ID 112, footer;misc;default -->

